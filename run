#!/bin/sh

APP_ROOT=`pwd`
GIT_REV=`git rev-parse --verify HEAD`
USER=`whoami`+dev
NODE_VERSION=v0.10.1
PATH=${PATH}:${APP_ROOT}/vendor/nvm/${NODE_VERSION}/bin
export PATH

buildCommon() {
  if [[ `node --version` != ${NODE_VERSION} ]]; then
    git submodule init; git submodule update
    . ${APP_ROOT}/vendor/nvm/nvm.sh; nvm install ${NODE_VERSION}
  fi
}

buildProd() {
  NODE_ENV=prod APP_ROOT=${APP_ROOT} GIT_REV=${GIT_REV} node config/build/webBuild.js
}


case $1 in
  'lint' )
    find . -type f -a ! -path './mytests/*' -a ! -path './.git/*' \
        -a ! -path './web/*' -a ! -path './web-build/*' \
        -a ! -path './node_modules/*' -a ! -path './vendor/*' -exec ./node_modules/.bin/jshint {} --config config/build/jshint.config.json \;
    find web -type f -a ! -path 'web/css/*' -a ! -path 'web/images/*' -a ! -path 'web/js/lib/*' -a ! -path 'web/js/templates/*' -a ! -path 'web/layout.html' -exec ./node_modules/jshint/bin/hint {} --config config/build/jshint.config.web.json \;
    ;;

  'test' )
    NODE_ENV=test APP_ROOT=${APP_ROOT} find test -type f -a -name *.spec.js -exec ./node_modules/mocha/bin/mocha --globals requirejsVars -R list --require should {} \;
    ;;

  'build' )
    buildProd
    ;;

  'dev' )
    buildCommon
    NODE_ENV=dev APP_ROOT=${APP_ROOT} node config/build/mongoIndexes.js
    NODE_ENV=dev APP_ROOT=${APP_ROOT} ./node_modules/forever/bin/forever stop devserver.js
    NODE_ENV=dev APP_ROOT=${APP_ROOT} ./node_modules/forever/bin/forever start -l /service/log/forever.log -o /service/log/app.log -e /service/log/app-stderr.log -p /service/tmp --append devserver.js
    ;;

  'sandbox' )
    buildCommon
    NODE_ENV=dev APP_ROOT=${APP_ROOT} node config/build/mongoIndexes.js
    NODE_ENV=dev APP_ROOT=${APP_ROOT} USER=${USER} node app/server.js
    ;;

  'timeline-sb' )
    buildCommon
    NODE_ENV=dev APP_ROOT=${APP_ROOT} node config/build/mongoIndexes.js
    NODE_ENV=dev APP_ROOT=${APP_ROOT} USER=${USER} node timeline/server.js
    ;;

  'splash-sb' )
    buildCommon
    NODE_ENV=dev APP_ROOT=${APP_ROOT} node config/build/mongoIndexes.js
    NODE_ENV=dev APP_ROOT=${APP_ROOT} USER=${USER} node splash/server.js
    ;;

  'splash-prod' )
    buildCommon
    NODE_ENV=prod APP_ROOT=${APP_ROOT} node config/build/mongoIndexes.js
    NODE_ENV=prod APP_ROOT=${APP_ROOT} GIT_REV=${GIT_REV} ./node_modules/forever/bin/forever stop splash/server.js
    NODE_ENV=prod APP_ROOT=${APP_ROOT} GIT_REV=${GIT_REV} ./node_modules/forever/bin/forever start -l /service/log/forever.log -o /service/log/splash.log -e /service/log/splash-stderr.log -p /service/tmp --append splash/server.js
    ;;

  'prod' )
    buildCommon
    buildProd

    NODE_ENV=prod APP_ROOT=${APP_ROOT} node config/build/mongoIndexes.js
    NODE_ENV=prod APP_ROOT=${APP_ROOT} GIT_REV=${GIT_REV} ./node_modules/forever/bin/forever stop app/server.js
    NODE_ENV=prod APP_ROOT=${APP_ROOT} GIT_REV=${GIT_REV} ./node_modules/forever/bin/forever start -l /service/log/forever.log -o /service/log/app.log -e /service/log/app-stderr.log -p /service/tmp --append app/server.js
    ;;

  'prod-test' )
    buildCommon
    buildProd

    NODE_ENV=prod APP_ROOT=${APP_ROOT} node config/build/mongoIndexes.js
    NODE_ENV=prod APP_ROOT=${APP_ROOT} GIT_REV=${GIT_REV} USER=${USER} node app/server.js
    ;;


  * )
    echo 'What?'
    ;;
esac
